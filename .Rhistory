formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch, options = list(pageLength = 5) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch, options = list(pageLength = 5) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch, options = list(pageLength = 5) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch, options = list(pageLength = 5) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch, options = list(pageLength = 5)) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch, options =pageLength = 5) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch, options =pageLength = 5) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap', options =pageLength = 5) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
## Highlight row in Table
datatable(df, rownames = FALSE, options =pageLength = 5) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
## Highlight row in Table
datatable(df, rownames = FALSE, options =pageLength = 5) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
datatable(df, rownames = FALSE, options =pageLength = 5) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
## Highlight row in Table
datatable(df, rownames = FALSE) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
datatable(df, rownames = FALSE, options =pageLength = 3) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, options =pageLength = 3) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
rm(list=ls())
## Highlight row in Table
datatable(df, rownames = FALSE, options =pageLength = 3) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
datatable(df, rownames = FALSE, options =pageLength = 10) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap') %>%
formatStyle('V6', ## select target column to compare    container = sketch
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
datatable(df, rownames = FALSE) %>%
formatStyle('V6', ## select target column to compare    container = sketch
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
datatable(df, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
rm(list = ls())
library(DT)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
View(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
df
head(iris)
sketch = htmltools::withTags(table(
tableHeader(iris),
tableFooter(iris)
))
print(sketch)
## Highlight row in Table
datatable(iris, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(
searchable = FALSE,
pageLength = 5)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
rm(list=ls())
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(
searchable = FALSE,
pageLength = 5)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(
searchable = FALSE,
pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
## Highlight row in Table
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
## Highlight row in Table
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(mpcars, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(mtcars, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(mtcars, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
knitr::opts_chunk$set(echo = TRUE)
opt <- function(eq, interval) {
max <- optimise(eq, interval = interval, maximum = T)
min <- optimise(eq, interval = interval, maximum = F)
curve(eq, from =interval[1], to=interval[2])
cat(paste("max: (x, f(X)) = ", max[[1]], ", ", max[[2]]))
cat(" ", sep = "\n")
cat(paste("min: (x, f(x)) = ", min[[1]], ", ", min[[2]]))
}
你好嗎我好
setwd("C:/Users/user/rlads_communicate/communicate.web.source")
library(dplyr)
library(readr)
library(plotly)
library(ggplot2)
library(RColorBrewer)
library(scales)
library(dygraphs)
kor_age_tour <- read_csv("./korea/kor_age_tour.csv")
kor_gender_tour <- read_csv("./korea/kor_gender_tour.csv")
kor_tour <- read_csv("./korea/kor_tour.csv")
jp_age_tour <- read_csv("./korea/jp_age_tour.csv")
jp_gender_tour <- read_csv("./korea/jp_gender_tour.csv")
jp_tour <- read_csv("./korea/jp_tour.csv")
# pl_kor_age_tour
# pl_kor_gender_tour
# pl_jp_age_tour
# pl_jp_gender_tour
# pl_total
## plot kor age group-------------
for (i in 2:ncol(kor_age_tour)) {kor_age_tour[,i] <- kor_age_tour[,i]/10000}
pl_kor_age_tour <- dygraph(kor_age_tour, main = "旅韓人數：按年齡",group="age") %>%
dyCSS("dygraph.css") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("-12", axis = 'y', label = "  -12", color = hue_pal()(7)[1]) %>%
dySeries("13-19", axis = 'y', label = "13-19", color = hue_pal()(7)[2]) %>%
dySeries("20-29", axis = 'y', label = "20-29", color = hue_pal()(7)[3]) %>%
dySeries("30-39", axis = 'y', label = "30-39", color = hue_pal()(7)[4]) %>%
dySeries("40-49", axis = 'y', label = "40-49", color = hue_pal()(7)[5]) %>%
dySeries("50-59", axis = 'y', label = "50-59", color = hue_pal()(7)[6]) %>%
dySeries("60-", axis = 'y', label = "60-  ", color = hue_pal()(7)[7]) %>%
dyAxis("y", label = "人數(萬)") %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
## plot jp age group-------------
for (i in 2:ncol(jp_age_tour)) {jp_age_tour[,i] <- jp_age_tour[,i]/10000}
pl_jp_age_tour <- dygraph(jp_age_tour, main = "旅日人數：按年齡",group="age") %>%
dyCSS("dygraph.css") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("-12", axis = 'y', label = "  -12", color = hue_pal()(7)[1]) %>%
dySeries("13-19", axis = 'y', label = "13-19", color = hue_pal()(7)[2]) %>%
dySeries("20-29", axis = 'y', label = "20-29", color = hue_pal()(7)[3]) %>%
dySeries("30-39", axis = 'y', label = "30-39", color = hue_pal()(7)[4]) %>%
dySeries("40-49", axis = 'y', label = "40-49", color = hue_pal()(7)[5]) %>%
dySeries("50-59", axis = 'y', label = "50-59", color = hue_pal()(7)[6]) %>%
dySeries("60-", axis = 'y', label = "60-  ", color = hue_pal()(7)[7]) %>%
dyAxis("y", label = "人數(萬)") %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
## plot kor gender -------------------
for (i in 2:ncol(kor_gender_tour)) {kor_gender_tour[,i] <- kor_gender_tour[,i]/10000}
pl_kor_gender_tour <- dygraph(kor_gender_tour, main = "旅韓人數：按性別",group="gender") %>%
dyCSS("dygraph.css") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("female", axis = 'y', label = "女性",strokeWidth=2,color = hue_pal()(2)[1]) %>%
dySeries("male", axis = 'y', label = "男性",strokeWidth=2,color = hue_pal()(2)[2]) %>%
dyAxis("y", label = "人數(萬)") %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
## plot jp gender------------
for (i in 2:ncol(jp_gender_tour)) {jp_gender_tour[,i] <- jp_gender_tour[,i]/10000}
pl_jp_gender_tour <- dygraph(jp_gender_tour, main = "旅日人數：按性別",group="gender") %>%
dyCSS("dygraph.css") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("female", axis = 'y', label = "女性",strokeWidth=2,color = hue_pal()(2)[1]) %>%
dySeries("male", axis = 'y', label = "男性",strokeWidth=2,color = hue_pal()(2)[2]) %>%
dyAxis("y", label = "人數(萬)") %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
## plot jp kor total----------
kor_tour <- kor_tour %>% filter(year>=1994)
total <- left_join(kor_tour,jp_tour,by="year")
colnames(total)[2:3] <- c("korea","japan")
for (i in 2:ncol(total)) {total[,i] <- total[,i]/10000}
pl_total <- dygraph(total, main = "韓/日 旅遊人數") %>%
dyCSS("dygraph.css") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("korea", axis = 'y', label = "韓國",strokeWidth=1.5,color = hue_pal()(2)[2]) %>%
dySeries("japan", axis = 'y2', label = "日本",strokeWidth=1.5,color = hue_pal()(2)[1]) %>%
dyAxis("y", label = "旅韓人數(萬)",axisLabelColor=hue_pal()(2)[2]) %>%
dyAxis("y2", label = "旅日人數(萬)",axisLabelColor=hue_pal()(2)[1],independentTicks =TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
pl_total_2 <- ggplot(data=total)+
geom_line(mapping = aes(x=year,y=korea,color ="韓國"))+
geom_line(mapping = aes(x=year,y=japan,color="日本"))+
scale_x_continuous(breaks=seq(1994,2015, by=2))+
scale_y_continuous(breaks=seq(0, 400, by=50))+
labs(title = "韓/日 旅遊人數",x="",y="人數(萬) \n ",color="")
# ggplotly(pl_total_2)
pl_jp_age_tour
pl_jp_gender_tour
# setwd("C:/Users/user/rlads_communicate/communicate.web.source")
library(readr)
library(ggplot2)
library(plotly)
library(tidyr)
library(dygraphs)
library(xts)
library(scales)
curr <- read_csv("./currency/NTD_against_JP_KR.csv") %>%
separate(MONTH, into = c('year', 'month'), sep =-3) %>%
mutate(year=1911+as.numeric(year))
curr$date <- paste(curr$year,"-",curr$month,"-01",sep = "")
curr <- curr %>%
mutate(date=as.Date(date)) %>%
select(date,NTD_JPY,NTD_KRW)
curr <- xts(curr, order.by = curr$date)[,-1]
pl_curr <- dygraph(curr, main = "2002-2017(月) 台幣兌日/韓匯率") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("NTD_JPY", axis = 'y', label = "日圓", color=hue_pal()(2)[2]) %>%
dySeries("NTD_KRW", axis = 'y2', label = "韓元", color = hue_pal()(2)[1]) %>%
dyAxis("y", label = "日圓/新台幣",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "韓元/新台幣",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
# pl_curr
pl_curr
pl_curr <- dygraph(curr, main = "2002-2017(月) 台幣兌日/韓匯率") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("NTD_JPY", axis = 'y', label = "日圓",strokeWidth =1.5,color=hue_pal()(2)[2]) %>%
dySeries("NTD_KRW", axis = 'y2', label = "韓元",strokeWidth =1.5,color = hue_pal()(2)[1]) %>%
dyAxis("y", label = "日圓/新台幣",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "韓元/新台幣",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
pl_curr
pl_visa_country <- ggplot(visa_country_tour)+
geom_line(mapping=aes(x=Year,y=Count/10000,color=Location))+
scale_x_continuous(breaks = seq(2000,2015, by=2))+
scale_y_continuous(breaks=seq(0, 1200, by=50))+
labs(x="",y="萬人",color="",title="免簽國家旅遊人數")
library(readr)
library(ggplot2)
library(plotly)
library(timevis)
visa_country_tour <- read_csv("./currency/visa_country_tour.csv")
visa <- read_csv("./currency/visa.csv")
pl_visa_country <- ggplot(visa_country_tour)+
geom_line(mapping=aes(x=Year,y=Count/10000,color=Location))+
scale_x_continuous(breaks = seq(2000,2015, by=2))+
scale_y_continuous(breaks=seq(0, 1200, by=50))+
labs(x="",y="萬人",color="",title="免簽國家旅遊人數")
# ggplotly(pl_visa_country)
colnames(visa) <- c("start","content")
# timevis(visa)
ggplotly(pl_visa_country)
timevis(visa)
library(flexdashboard)
knitr::opts_chunk$set("eval"=T,message=FALSE, warning=FALSE,comment="")
source("./korea/plot_kor.R",encoding="utf-8")
pl_total
pl_total
pl_total
pl_curr
