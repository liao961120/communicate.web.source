)
rm(list=ls())
## Highlight row in Table
datatable(df, rownames = FALSE, options =pageLength = 3) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
datatable(df, rownames = FALSE, options =pageLength = 10) %>%
formatStyle('V6', ## select target column to compare    container = sketch , style='bootstrap'
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap') %>%
formatStyle('V6', ## select target column to compare    container = sketch
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
datatable(df, rownames = FALSE) %>%
formatStyle('V6', ## select target column to compare    container = sketch
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
datatable(df, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
rm(list = ls())
library(DT)
sketch = htmltools::withTags(table(
tableHeader(df),
tableFooter(df)
))
print(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
View(sketch)
## Highlight row in Table
datatable(df, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('V6', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
## gray: for rows with 0 at V6
## yellow: for rows with 1 at V6
)
df
head(iris)
sketch = htmltools::withTags(table(
tableHeader(iris),
tableFooter(iris)
))
print(sketch)
## Highlight row in Table
datatable(iris, rownames = FALSE, style='bootstrap',container = sketch) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(
searchable = FALSE,
pageLength = 5)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
rm(list=ls())
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(
searchable = FALSE,
pageLength = 5)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(
searchable = FALSE,
pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
## Highlight row in Table
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
## Highlight row in Table
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(mpcars, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(mtcars, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(mtcars, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
datatable(iris, rownames = FALSE, style='bootstrap',
options = list(pageLength = 8)
) %>%
formatStyle('Petal.Length', ## select target column to compare
target = 'row',  ## highlight row
backgroundColor = styleEqual(c(1.4, 1.7), c('gray', 'yellow'))
## gray: for rows with 1.4 at Petal.Length
## yellow: for rows with 1.7 at Petal.Length
)
debugSource('C:/Users/user/rlads_communicate/communicate.web.source/unemployment.disease/plot_h1n1.R', encoding = 'UTF-8')
# setwd("C:/Users/user/rlads_communicate/communicate.web.source")
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(plotly)
library(dygraphs)
library(flexdashboard)
library(RColorBrewer)
library(scales)
library(xts)
# hue_pal()(4) # function to generate ggplot palette, 4 indicates 4 colors
h1n1_global <- read_csv("./unemployment.disease/data/h1n1_global_08_11.csv")
taiwan_tour_month <- read_csv("./unemployment.disease/data/taiwan_tour_byMonth.csv")
## function: tour to Asisan countries by month
tour_year_country <- function(date=c(98,97),country="Korea") {
tour_year_country <- taiwan_tour_month %>%
filter(T_Y==date[1]|T_Y==date[2]) %>%
filter(grepl(country,Country)) %>% # "中國|日本|韓國|香港|澳門"
# filter(grepl("China|Japan|Korea",Country))
rename("Count"=Cases)
}
h1n1_country <- function(country="Republic of Korea") {
h1n1_country <- h1n1_global %>%
filter(grepl(country,Country)) #Republic of Korea|China|Japan|Thailand|Indonesia|Singapore|Malaysia
# filter(grepl("Republic of Korea|China|Japan",Country))
# China|Japan|Republic of Korea|Hong Kong|Thailand|Indonesia|Singapore|Malaysia
}
#---Plotting---------
tour_2009_10_Korea <- tour_year_country(c(98,99),"Korea") %>% select(YMD, Count)
h1n1_Korea <- h1n1_country("Republic of Korea") %>% select(YMD, Cases)
Korea <- left_join(tour_2009_10_Korea,h1n1_Korea,by="YMD") %>% mutate(Count=Count/100)
Korea <- xts(Korea, order.by=(Korea$YMD))[,-1]
tour_2009_10_Japan <- tour_year_country(c(98,99),"Japan") %>% select(YMD, Count)
h1n1_Japan <- h1n1_country("Japan") %>% select(YMD, Cases)
Japan <- left_join(tour_2009_10_Japan,h1n1_Japan,by="YMD") %>% mutate(Count=Count/100)
Japan <- xts(Japan, order.by=(Japan$YMD))[,-1]
dygraph(Korea, main = "Korea", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
dygraph(Japan, main = "Japan", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
dygraph(Japan, main = "Japan", group = "H1N1")
dygraph(Korea, main = "Korea", group = "H1N1")
pl_h1n1_jp <- function() {
dygraph(Japan, main = "Japan", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
}
pl_h1n1_jp()
# setwd("C:/Users/user/rlads_communicate/communicate.web.source")
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(plotly)
library(dygraphs)
library(flexdashboard)
library(RColorBrewer)
library(scales)
library(xts)
# hue_pal()(4) # function to generate ggplot palette, 4 indicates 4 colors
h1n1_global <- read_csv("./unemployment.disease/data/h1n1_global_08_11.csv")
taiwan_tour_month <- read_csv("./unemployment.disease/data/taiwan_tour_byMonth.csv")
## function: tour to Asisan countries by month
tour_year_country <- function(date=c(98,97),country="Korea") {
tour_year_country <- taiwan_tour_month %>%
filter(T_Y==date[1]|T_Y==date[2]) %>%
filter(grepl(country,Country)) %>% # "中國|日本|韓國|香港|澳門"
# filter(grepl("China|Japan|Korea",Country))
rename("Count"=Cases)
}
h1n1_country <- function(country="Republic of Korea") {
h1n1_country <- h1n1_global %>%
filter(grepl(country,Country)) #Republic of Korea|China|Japan|Thailand|Indonesia|Singapore|Malaysia
# filter(grepl("Republic of Korea|China|Japan",Country))
# China|Japan|Republic of Korea|Hong Kong|Thailand|Indonesia|Singapore|Malaysia
}
#---Plotting---------
tour_2009_10_Korea <- tour_year_country(c(98,99),"Korea") %>% select(YMD, Count)
h1n1_Korea <- h1n1_country("Republic of Korea") %>% select(YMD, Cases)
Korea <- left_join(tour_2009_10_Korea,h1n1_Korea,by="YMD") %>% mutate(Count=Count/100)
Korea <- xts(Korea, order.by=(Korea$YMD))[,-1]
tour_2009_10_Japan <- tour_year_country(c(98,99),"Japan") %>% select(YMD, Count)
h1n1_Japan <- h1n1_country("Japan") %>% select(YMD, Cases)
Japan <- left_join(tour_2009_10_Japan,h1n1_Japan,by="YMD") %>% mutate(Count=Count/100)
Japan <- xts(Japan, order.by=(Japan$YMD))[,-1]
setwd("C:/Users/user/rlads_communicate/communicate.web.source")
# setwd("C:/Users/user/rlads_communicate/communicate.web.source")
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(plotly)
library(dygraphs)
library(flexdashboard)
library(RColorBrewer)
library(scales)
library(xts)
# hue_pal()(4) # function to generate ggplot palette, 4 indicates 4 colors
h1n1_global <- read_csv("./unemployment.disease/data/h1n1_global_08_11.csv")
taiwan_tour_month <- read_csv("./unemployment.disease/data/taiwan_tour_byMonth.csv")
## function: tour to Asisan countries by month
tour_year_country <- function(date=c(98,97),country="Korea") {
tour_year_country <- taiwan_tour_month %>%
filter(T_Y==date[1]|T_Y==date[2]) %>%
filter(grepl(country,Country)) %>% # "中國|日本|韓國|香港|澳門"
# filter(grepl("China|Japan|Korea",Country))
rename("Count"=Cases)
}
h1n1_country <- function(country="Republic of Korea") {
h1n1_country <- h1n1_global %>%
filter(grepl(country,Country)) #Republic of Korea|China|Japan|Thailand|Indonesia|Singapore|Malaysia
# filter(grepl("Republic of Korea|China|Japan",Country))
# China|Japan|Republic of Korea|Hong Kong|Thailand|Indonesia|Singapore|Malaysia
}
#---Plotting---------
tour_2009_10_Korea <- tour_year_country(c(98,99),"Korea") %>% select(YMD, Count)
h1n1_Korea <- h1n1_country("Republic of Korea") %>% select(YMD, Cases)
Korea <- left_join(tour_2009_10_Korea,h1n1_Korea,by="YMD") %>% mutate(Count=Count/100)
Korea <- xts(Korea, order.by=(Korea$YMD))[,-1]
tour_2009_10_Japan <- tour_year_country(c(98,99),"Japan") %>% select(YMD, Count)
h1n1_Japan <- h1n1_country("Japan") %>% select(YMD, Cases)
Japan <- left_join(tour_2009_10_Japan,h1n1_Japan,by="YMD") %>% mutate(Count=Count/100)
Japan <- xts(Japan, order.by=(Japan$YMD))[,-1]
dygraph(Korea, main = "Korea", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
pl_h1n1_jp <- function() {
dygraph(Japan, main = "Japan", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
}
dygraph(Japan, main = "Japan", group = "H1N1")
dygraph(Korea, main = "Korea", group = "H1N1")
pl_h1n1_jp <- function() {
dygraph(Japan, main = "Japan", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
}
pl_h1n1_jp()
Sys.setlocale(category = "LC_ALL", locale = "cht")
pl_h1n1_jp()
dygraph(Japan, main = "Japan", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
pl_h1n1_jp <- function() {
dygraph(Japan, main = "Japan", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
}
pl_h1n1_jp()
rm(list = ls())
# setwd("C:/Users/user/rlads_communicate/communicate.web.source")
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(plotly)
library(dygraphs)
library(flexdashboard)
library(RColorBrewer)
library(scales)
library(xts)
# hue_pal()(4) # function to generate ggplot palette, 4 indicates 4 colors
h1n1_global <- read_csv("./unemployment.disease/data/h1n1_global_08_11.csv")
taiwan_tour_month <- read_csv("./unemployment.disease/data/taiwan_tour_byMonth.csv")
## function: tour to Asisan countries by month
tour_year_country <- function(date=c(98,97),country="Korea") {
tour_year_country <- taiwan_tour_month %>%
filter(T_Y==date[1]|T_Y==date[2]) %>%
filter(grepl(country,Country)) %>% # "中國|日本|韓國|香港|澳門"
# filter(grepl("China|Japan|Korea",Country))
rename("Count"=Cases)
}
h1n1_country <- function(country="Republic of Korea") {
h1n1_country <- h1n1_global %>%
filter(grepl(country,Country)) #Republic of Korea|China|Japan|Thailand|Indonesia|Singapore|Malaysia
# filter(grepl("Republic of Korea|China|Japan",Country))
# China|Japan|Republic of Korea|Hong Kong|Thailand|Indonesia|Singapore|Malaysia
}
#---Plotting---------
tour_2009_10_Korea <- tour_year_country(c(98,99),"Korea") %>% select(YMD, Count)
h1n1_Korea <- h1n1_country("Republic of Korea") %>% select(YMD, Cases)
Korea <- left_join(tour_2009_10_Korea,h1n1_Korea,by="YMD") %>% mutate(Count=Count/100)
Korea <- xts(Korea, order.by=(Korea$YMD))[,-1]
tour_2009_10_Japan <- tour_year_country(c(98,99),"Japan") %>% select(YMD, Count)
h1n1_Japan <- h1n1_country("Japan") %>% select(YMD, Cases)
Japan <- left_join(tour_2009_10_Japan,h1n1_Japan,by="YMD") %>% mutate(Count=Count/100)
Japan <- xts(Japan, order.by=(Japan$YMD))[,-1]
dygraph(Korea, main = "Korea", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
pl_h1n1_jp <- function() {
dygraph(Japan, main = "Japan", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
}
dygraph(Japan, main = "Japan", group = "H1N1")
dygraph(Korea, main = "Korea", group = "H1N1")
pl_h1n1_jp()
rm(list = ls())
# setwd("C:/Users/user/rlads_communicate/communicate.web.source")
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(plotly)
library(dygraphs)
library(flexdashboard)
library(RColorBrewer)
library(scales)
library(xts)
# hue_pal()(4) # function to generate ggplot palette, 4 indicates 4 colors
h1n1_global <- read_csv("./unemployment.disease/data/h1n1_global_08_11.csv")
taiwan_tour_month <- read_csv("./unemployment.disease/data/taiwan_tour_byMonth.csv")
## function: tour to Asisan countries by month
tour_year_country <- function(date=c(98,97),country="Korea") {
tour_year_country <- taiwan_tour_month %>%
filter(T_Y==date[1]|T_Y==date[2]) %>%
filter(grepl(country,Country)) %>% # "中國|日本|韓國|香港|澳門"
# filter(grepl("China|Japan|Korea",Country))
rename("Count"=Cases)
}
h1n1_country <- function(country="Republic of Korea") {
h1n1_country <- h1n1_global %>%
filter(grepl(country,Country)) #Republic of Korea|China|Japan|Thailand|Indonesia|Singapore|Malaysia
# filter(grepl("Republic of Korea|China|Japan",Country))
# China|Japan|Republic of Korea|Hong Kong|Thailand|Indonesia|Singapore|Malaysia
}
#---Plotting---------
tour_2009_10_Korea <- tour_year_country(c(98,99),"Korea") %>% select(YMD, Count)
h1n1_Korea <- h1n1_country("Republic of Korea") %>% select(YMD, Cases)
Korea <- left_join(tour_2009_10_Korea,h1n1_Korea,by="YMD") %>% mutate(Count=Count/100)
Korea <- xts(Korea, order.by=(Korea$YMD))[,-1]
tour_2009_10_Japan <- tour_year_country(c(98,99),"Japan") %>% select(YMD, Count)
h1n1_Japan <- h1n1_country("Japan") %>% select(YMD, Cases)
Japan <- left_join(tour_2009_10_Japan,h1n1_Japan,by="YMD") %>% mutate(Count=Count/100)
Japan <- xts(Japan, order.by=(Japan$YMD))[,-1]
pl_h1n1_kr <- function() {
dygraph(Korea, main = "Korea", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
}
pl_h1n1_jp <- function() {
dygraph(Japan, main = "Japan", group = "H1N1") %>%
dyOptions(axisLabelFontSize = 12, axisLineWidth = 0.8, drawGrid=F) %>%
dySeries("Cases", axis = 'y2', label = "H1N1病例", color = hue_pal()(2)[1]) %>%
dySeries("Count", axis = 'y', label = "旅遊人數(百人)", color=hue_pal()(2)[2]) %>%
dyAxis("y", label = "旅遊人數(百)",axisLabelColor = hue_pal()(2)[2]) %>%
dyAxis("y2", label = "H1N1病例",axisLabelColor = hue_pal()(2)[1],independentTicks = TRUE) %>%
dyRangeSelector(height = 20, strokeColor = "") %>%
dyHighlight(highlightSeriesOpts = list(strokeWidth = 3),highlightSeriesBackgroundAlpha = 1) %>%
dyLegend(labelsSeparateLines=T)
}
# dygraph(Japan, main = "Japan", group = "H1N1")
# dygraph(Korea, main = "Korea", group = "H1N1")
pl_h1n1_kr()
